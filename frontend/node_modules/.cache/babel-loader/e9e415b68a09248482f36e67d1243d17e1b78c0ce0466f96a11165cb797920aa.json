{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Crear instancia de axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 15000,\n  // ✅ Aumentado timeout para reportes\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para agregar token automáticamente\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('accessToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para manejar respuestas y errores\napi.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  var _error$response, _error$config, _error$config$url, _error$response2, _error$config2, _error$config2$url, _error$response3, _error$config3, _error$config3$url, _error$response4, _error$response5, _error$config4, _error$config4$url, _error$response6, _error$response7;\n  const originalRequest = error.config;\n\n  // Si el token expiró, intentar renovarlo\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (refreshToken) {\n        const response = await axios.post(`${API_BASE_URL}/auth/refresh`, {\n          refreshToken\n        });\n        const {\n          accessToken\n        } = response.data;\n        localStorage.setItem('accessToken', accessToken);\n\n        // Reintentar la petición original\n        originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n        return api(originalRequest);\n      }\n    } catch (refreshError) {\n      // Si no se puede renovar, limpiar storage\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('usuario');\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n\n  // ✅ FILTRAR ERRORES ESPECÍFICOS: No mostrar toast para errores esperados\n  const isAccountError = ((_error$config = error.config) === null || _error$config === void 0 ? void 0 : (_error$config$url = _error$config.url) === null || _error$config$url === void 0 ? void 0 : _error$config$url.includes('/pedidos/cuenta/mesa/')) && ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 400;\n  const isHistorialError = ((_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : (_error$config2$url = _error$config2.url) === null || _error$config2$url === void 0 ? void 0 : _error$config2$url.includes('/pedidos')) && ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 404;\n  const isReportError = ((_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : (_error$config3$url = _error$config3.url) === null || _error$config3$url === void 0 ? void 0 : _error$config3$url.includes('/reportes')) && (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 404 || ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 500);\n  const isUserError = ((_error$config4 = error.config) === null || _error$config4 === void 0 ? void 0 : (_error$config4$url = _error$config4.url) === null || _error$config4$url === void 0 ? void 0 : _error$config4$url.includes('/users')) && ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 404;\n\n  // Solo mostrar error si no es un error de autenticación Y no es error esperado\n  if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) !== 401 && !isAccountError && !isHistorialError && !isReportError && !isUserError) {\n    var _error$response8, _error$response8$data, _error$response9, _error$response9$data;\n    const errorMessage = ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.error) || ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Error de conexión';\n    console.error('API Error:', errorMessage);\n    toast.error(errorMessage);\n  }\n  return Promise.reject(error);\n});\n\n// Servicios de autenticación\nexport const authService = {\n  login: async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    const {\n      usuario,\n      accessToken,\n      refreshToken\n    } = response.data;\n\n    // Guardar en localStorage\n    localStorage.setItem('accessToken', accessToken);\n    localStorage.setItem('refreshToken', refreshToken);\n    localStorage.setItem('usuario', JSON.stringify(usuario));\n    return response.data;\n  },\n  register: async userData => {\n    return await api.post('/auth/register', userData);\n  },\n  logout: () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('usuario');\n  },\n  getCurrentUser: () => {\n    const usuario = localStorage.getItem('usuario');\n    return usuario ? JSON.parse(usuario) : null;\n  },\n  isAuthenticated: () => {\n    return !!localStorage.getItem('accessToken');\n  },\n  hasRole: role => {\n    const usuario = authService.getCurrentUser();\n    return usuario && usuario.rol === role;\n  },\n  // ✅ CORREGIDO: Métodos de usuarios SIN datos de ejemplo\n  getUsers: async () => {\n    return await api.get('/users');\n  },\n  updateUser: async (id, userData) => {\n    return await api.put(`/users/${id}`, userData);\n  },\n  toggleUserStatus: async (id, status) => {\n    return await api.patch(`/users/${id}/status`, {\n      activo: status\n    });\n  },\n  changePassword: async (id, passwordData) => {\n    return await api.patch(`/users/${id}/password`, passwordData);\n  }\n};\n\n// Servicios de mesas\nexport const mesasService = {\n  getAll: () => api.get('/mesas'),\n  getById: id => api.get(`/mesas/${id}`),\n  create: mesa => api.post('/mesas', mesa),\n  update: (id, mesa) => api.put(`/mesas/${id}`, mesa),\n  delete: id => api.delete(`/mesas/${id}`),\n  changeStatus: (id, estado) => api.patch(`/mesas/${id}/estado`, {\n    estado\n  }),\n  getStats: () => api.get('/mesas/estadisticas')\n};\n\n// Servicios de categorías\nexport const categoriasService = {\n  getAll: () => api.get('/categorias'),\n  getById: id => api.get(`/categorias/${id}`),\n  create: categoria => api.post('/categorias', categoria),\n  update: (id, categoria) => api.put(`/categorias/${id}`, categoria),\n  delete: id => api.delete(`/categorias/${id}`)\n};\n\n// Servicios de productos\nexport const productosService = {\n  getAll: params => api.get('/productos', {\n    params\n  }),\n  getById: id => api.get(`/productos/${id}`),\n  getByCategory: categoriaId => api.get(`/productos/categoria/${categoriaId}`),\n  getAvailable: () => api.get('/productos/disponibles'),\n  create: producto => api.post('/productos', producto),\n  update: (id, producto) => api.put(`/productos/${id}`, producto),\n  delete: id => api.delete(`/productos/${id}`),\n  changeAvailability: (id, disponible) => api.patch(`/productos/${id}/disponibilidad`, {\n    disponible\n  })\n};\n\n// Servicios de pedidos\nexport const pedidosService = {\n  getAll: params => api.get('/pedidos', {\n    params\n  }),\n  getById: id => api.get(`/pedidos/${id}`),\n  getByMesa: (mesaId, incluirPagados = false) => {\n    const params = incluirPagados ? {\n      incluir_pagados: true\n    } : {};\n    return api.get(`/pedidos/mesa/${mesaId}`, {\n      params\n    });\n  },\n  getCocina: () => api.get('/pedidos/cocina'),\n  create: pedido => api.post('/pedidos', pedido),\n  changeStatus: (id, estado) => api.patch(`/pedidos/${id}/estado`, {\n    estado\n  }),\n  addProducts: (id, productos) => api.post(`/pedidos/${id}/productos`, {\n    productos\n  }),\n  cancel: (id, motivo) => api.patch(`/pedidos/${id}/cancelar`, {\n    motivo\n  }),\n  // ✅ Método getCuenta con manejo silencioso de errores\n  getCuenta: async mesaId => {\n    try {\n      return await api.get(`/pedidos/cuenta/mesa/${mesaId}`);\n    } catch (error) {\n      throw error;\n    }\n  },\n  procesarPago: (mesaId, datosPago) => api.post(`/pedidos/pago/mesa/${mesaId}`, datosPago),\n  getStats: params => api.get('/pedidos/estadisticas', {\n    params\n  })\n};\n\n// ✅ CORREGIDO: Servicios de reportes SIN fallbacks - datos reales solamente\nexport const reportesService = {\n  // Dashboard básico con datos reales\n  getDashboard: async () => {\n    try {\n      const response = await api.get('/reportes/dashboard');\n      console.log('✅ Dashboard obtenido del servidor:', response.data);\n      return response;\n    } catch (error) {\n      console.error('❌ Error obteniendo dashboard:', error);\n      throw error; // ✅ No fallback, lanzar error para manejo en componente\n    }\n  },\n  // Reportes de ventas con datos reales\n  getVentas: async params => {\n    try {\n      const response = await api.get('/reportes/ventas', {\n        params\n      });\n      console.log('✅ Reporte de ventas obtenido:', response.data);\n      return response;\n    } catch (error) {\n      console.error('❌ Error obteniendo reporte de ventas:', error);\n      throw error; // ✅ No fallback\n    }\n  },\n  // Productos más vendidos con datos reales\n  getProductosMasVendidos: async params => {\n    try {\n      const response = await api.get('/reportes/productos/mas-vendidos', {\n        params\n      });\n      console.log('✅ Productos más vendidos obtenidos:', response.data);\n      return response;\n    } catch (error) {\n      console.error('❌ Error obteniendo productos más vendidos:', error);\n      throw error; // ✅ No fallback\n    }\n  },\n  // Rendimiento de mozos con datos reales\n  getMozosRendimiento: async params => {\n    try {\n      const response = await api.get('/reportes/mozos/rendimiento', {\n        params\n      });\n      console.log('✅ Rendimiento de mozos obtenido:', response.data);\n      return response;\n    } catch (error) {\n      console.error('❌ Error obteniendo rendimiento de mozos:', error);\n      throw error; // ✅ No fallback\n    }\n  },\n  // Rendimiento de mesas con datos reales\n  getMesasRendimiento: async params => {\n    try {\n      const response = await api.get('/reportes/mesas/rendimiento', {\n        params\n      });\n      console.log('✅ Rendimiento de mesas obtenido:', response.data);\n      return response;\n    } catch (error) {\n      console.error('❌ Error obteniendo rendimiento de mesas:', error);\n      throw error; // ✅ No fallback\n    }\n  },\n  // Ventas por categoría con datos reales\n  getVentasPorCategoria: async params => {\n    try {\n      const response = await api.get('/reportes/categorias/ventas', {\n        params\n      });\n      console.log('✅ Ventas por categoría obtenidas:', response.data);\n      return response;\n    } catch (error) {\n      console.error('❌ Error obteniendo ventas por categoría:', error);\n      throw error; // ✅ No fallback\n    }\n  },\n  // Exportar reportes\n  exportar: async (tipo, params = {}) => {\n    try {\n      const response = await api.get(`/reportes/exportar/${tipo}`, {\n        params,\n        responseType: 'blob'\n      });\n      return response;\n    } catch (error) {\n      console.error('Error exportando reporte:', error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","toast","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$config","_error$config$url","_error$response2","_error$config2","_error$config2$url","_error$response3","_error$config3","_error$config3$url","_error$response4","_error$response5","_error$config4","_error$config4$url","_error$response6","_error$response7","originalRequest","status","_retry","refreshToken","post","accessToken","data","setItem","refreshError","removeItem","window","location","href","isAccountError","url","includes","isHistorialError","isReportError","isUserError","_error$response8","_error$response8$data","_error$response9","_error$response9$data","errorMessage","message","console","authService","login","email","password","usuario","JSON","stringify","register","userData","logout","getCurrentUser","parse","isAuthenticated","hasRole","role","rol","getUsers","get","updateUser","id","put","toggleUserStatus","patch","activo","changePassword","passwordData","mesasService","getAll","getById","mesa","update","delete","changeStatus","estado","getStats","categoriasService","categoria","productosService","params","getByCategory","categoriaId","getAvailable","producto","changeAvailability","disponible","pedidosService","getByMesa","mesaId","incluirPagados","incluir_pagados","getCocina","pedido","addProducts","productos","cancel","motivo","getCuenta","procesarPago","datosPago","reportesService","getDashboard","log","getVentas","getProductosMasVendidos","getMozosRendimiento","getMesasRendimiento","getVentasPorCategoria","exportar","tipo","responseType"],"sources":["D:/Proyecto-Silva-SIRER/sirer-project/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Crear instancia de axios\r\nconst api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    timeout: 15000, // ✅ Aumentado timeout para reportes\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Interceptor para agregar token automáticamente\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('accessToken');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Interceptor para manejar respuestas y errores\r\napi.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    async (error) => {\r\n        const originalRequest = error.config;\r\n\r\n        // Si el token expiró, intentar renovarlo\r\n        if (error.response?.status === 401 && !originalRequest._retry) {\r\n            originalRequest._retry = true;\r\n\r\n            try {\r\n                const refreshToken = localStorage.getItem('refreshToken');\r\n                if (refreshToken) {\r\n                    const response = await axios.post(`${API_BASE_URL}/auth/refresh`, {\r\n                        refreshToken\r\n                    });\r\n\r\n                    const { accessToken } = response.data;\r\n                    localStorage.setItem('accessToken', accessToken);\r\n\r\n                    // Reintentar la petición original\r\n                    originalRequest.headers.Authorization = `Bearer ${accessToken}`;\r\n                    return api(originalRequest);\r\n                }\r\n            } catch (refreshError) {\r\n                // Si no se puede renovar, limpiar storage\r\n                localStorage.removeItem('accessToken');\r\n                localStorage.removeItem('refreshToken');\r\n                localStorage.removeItem('usuario');\r\n                window.location.href = '/login';\r\n                return Promise.reject(refreshError);\r\n            }\r\n        }\r\n\r\n        // ✅ FILTRAR ERRORES ESPECÍFICOS: No mostrar toast para errores esperados\r\n        const isAccountError = error.config?.url?.includes('/pedidos/cuenta/mesa/') && \r\n                              error.response?.status === 400;\r\n        \r\n        const isHistorialError = error.config?.url?.includes('/pedidos') && \r\n                               error.response?.status === 404;\r\n\r\n        const isReportError = error.config?.url?.includes('/reportes') && \r\n                             (error.response?.status === 404 || error.response?.status === 500);\r\n\r\n        const isUserError = error.config?.url?.includes('/users') && \r\n                           error.response?.status === 404;\r\n        \r\n        // Solo mostrar error si no es un error de autenticación Y no es error esperado\r\n        if (error.response?.status !== 401 && !isAccountError && !isHistorialError && !isReportError && !isUserError) {\r\n            const errorMessage = error.response?.data?.error || \r\n                               error.response?.data?.message || \r\n                               'Error de conexión';\r\n            \r\n            console.error('API Error:', errorMessage);\r\n            toast.error(errorMessage);\r\n        }\r\n        \r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Servicios de autenticación\r\nexport const authService = {\r\n    login: async (email, password) => {\r\n        const response = await api.post('/auth/login', { email, password });\r\n        const { usuario, accessToken, refreshToken } = response.data;\r\n        \r\n        // Guardar en localStorage\r\n        localStorage.setItem('accessToken', accessToken);\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n        localStorage.setItem('usuario', JSON.stringify(usuario));\r\n        \r\n        return response.data;\r\n    },\r\n\r\n    register: async (userData) => {\r\n        return await api.post('/auth/register', userData);\r\n    },\r\n\r\n    logout: () => {\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n        localStorage.removeItem('usuario');\r\n    },\r\n\r\n    getCurrentUser: () => {\r\n        const usuario = localStorage.getItem('usuario');\r\n        return usuario ? JSON.parse(usuario) : null;\r\n    },\r\n\r\n    isAuthenticated: () => {\r\n        return !!localStorage.getItem('accessToken');\r\n    },\r\n\r\n    hasRole: (role) => {\r\n        const usuario = authService.getCurrentUser();\r\n        return usuario && usuario.rol === role;\r\n    },\r\n\r\n    // ✅ CORREGIDO: Métodos de usuarios SIN datos de ejemplo\r\n    getUsers: async () => {\r\n        return await api.get('/users');\r\n    },\r\n\r\n    updateUser: async (id, userData) => {\r\n        return await api.put(`/users/${id}`, userData);\r\n    },\r\n\r\n    toggleUserStatus: async (id, status) => {\r\n        return await api.patch(`/users/${id}/status`, { activo: status });\r\n    },\r\n\r\n    changePassword: async (id, passwordData) => {\r\n        return await api.patch(`/users/${id}/password`, passwordData);\r\n    }\r\n};\r\n\r\n// Servicios de mesas\r\nexport const mesasService = {\r\n    getAll: () => api.get('/mesas'),\r\n    getById: (id) => api.get(`/mesas/${id}`),\r\n    create: (mesa) => api.post('/mesas', mesa),\r\n    update: (id, mesa) => api.put(`/mesas/${id}`, mesa),\r\n    delete: (id) => api.delete(`/mesas/${id}`),\r\n    changeStatus: (id, estado) => api.patch(`/mesas/${id}/estado`, { estado }),\r\n    getStats: () => api.get('/mesas/estadisticas')\r\n};\r\n\r\n// Servicios de categorías\r\nexport const categoriasService = {\r\n    getAll: () => api.get('/categorias'),\r\n    getById: (id) => api.get(`/categorias/${id}`),\r\n    create: (categoria) => api.post('/categorias', categoria),\r\n    update: (id, categoria) => api.put(`/categorias/${id}`, categoria),\r\n    delete: (id) => api.delete(`/categorias/${id}`)\r\n};\r\n\r\n// Servicios de productos\r\nexport const productosService = {\r\n    getAll: (params) => api.get('/productos', { params }),\r\n    getById: (id) => api.get(`/productos/${id}`),\r\n    getByCategory: (categoriaId) => api.get(`/productos/categoria/${categoriaId}`),\r\n    getAvailable: () => api.get('/productos/disponibles'),\r\n    create: (producto) => api.post('/productos', producto),\r\n    update: (id, producto) => api.put(`/productos/${id}`, producto),\r\n    delete: (id) => api.delete(`/productos/${id}`),\r\n    changeAvailability: (id, disponible) => api.patch(`/productos/${id}/disponibilidad`, { disponible })\r\n};\r\n\r\n// Servicios de pedidos\r\nexport const pedidosService = {\r\n    getAll: (params) => api.get('/pedidos', { params }),\r\n    getById: (id) => api.get(`/pedidos/${id}`),\r\n    getByMesa: (mesaId, incluirPagados = false) => {\r\n        const params = incluirPagados ? { incluir_pagados: true } : {};\r\n        return api.get(`/pedidos/mesa/${mesaId}`, { params });\r\n    },\r\n    getCocina: () => api.get('/pedidos/cocina'),\r\n    create: (pedido) => api.post('/pedidos', pedido),\r\n    changeStatus: (id, estado) => api.patch(`/pedidos/${id}/estado`, { estado }),\r\n    addProducts: (id, productos) => api.post(`/pedidos/${id}/productos`, { productos }),\r\n    cancel: (id, motivo) => api.patch(`/pedidos/${id}/cancelar`, { motivo }),\r\n    \r\n    // ✅ Método getCuenta con manejo silencioso de errores\r\n    getCuenta: async (mesaId) => {\r\n        try {\r\n            return await api.get(`/pedidos/cuenta/mesa/${mesaId}`);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n    \r\n    procesarPago: (mesaId, datosPago) => api.post(`/pedidos/pago/mesa/${mesaId}`, datosPago),\r\n    getStats: (params) => api.get('/pedidos/estadisticas', { params })\r\n};\r\n\r\n// ✅ CORREGIDO: Servicios de reportes SIN fallbacks - datos reales solamente\r\nexport const reportesService = {\r\n    // Dashboard básico con datos reales\r\n    getDashboard: async () => {\r\n        try {\r\n            const response = await api.get('/reportes/dashboard');\r\n            console.log('✅ Dashboard obtenido del servidor:', response.data);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('❌ Error obteniendo dashboard:', error);\r\n            throw error; // ✅ No fallback, lanzar error para manejo en componente\r\n        }\r\n    },\r\n\r\n    // Reportes de ventas con datos reales\r\n    getVentas: async (params) => {\r\n        try {\r\n            const response = await api.get('/reportes/ventas', { params });\r\n            console.log('✅ Reporte de ventas obtenido:', response.data);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('❌ Error obteniendo reporte de ventas:', error);\r\n            throw error; // ✅ No fallback\r\n        }\r\n    },\r\n\r\n    // Productos más vendidos con datos reales\r\n    getProductosMasVendidos: async (params) => {\r\n        try {\r\n            const response = await api.get('/reportes/productos/mas-vendidos', { params });\r\n            console.log('✅ Productos más vendidos obtenidos:', response.data);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('❌ Error obteniendo productos más vendidos:', error);\r\n            throw error; // ✅ No fallback\r\n        }\r\n    },\r\n\r\n    // Rendimiento de mozos con datos reales\r\n    getMozosRendimiento: async (params) => {\r\n        try {\r\n            const response = await api.get('/reportes/mozos/rendimiento', { params });\r\n            console.log('✅ Rendimiento de mozos obtenido:', response.data);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('❌ Error obteniendo rendimiento de mozos:', error);\r\n            throw error; // ✅ No fallback\r\n        }\r\n    },\r\n\r\n    // Rendimiento de mesas con datos reales\r\n    getMesasRendimiento: async (params) => {\r\n        try {\r\n            const response = await api.get('/reportes/mesas/rendimiento', { params });\r\n            console.log('✅ Rendimiento de mesas obtenido:', response.data);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('❌ Error obteniendo rendimiento de mesas:', error);\r\n            throw error; // ✅ No fallback\r\n        }\r\n    },\r\n\r\n    // Ventas por categoría con datos reales\r\n    getVentasPorCategoria: async (params) => {\r\n        try {\r\n            const response = await api.get('/reportes/categorias/ventas', { params });\r\n            console.log('✅ Ventas por categoría obtenidas:', response.data);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('❌ Error obteniendo ventas por categoría:', error);\r\n            throw error; // ✅ No fallback\r\n        }\r\n    },\r\n\r\n    // Exportar reportes\r\n    exportar: async (tipo, params = {}) => {\r\n        try {\r\n            const response = await api.get(`/reportes/exportar/${tipo}`, { \r\n                params,\r\n                responseType: 'blob'\r\n            });\r\n            return response;\r\n        } catch (error) {\r\n            console.error('Error exportando reporte:', error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}