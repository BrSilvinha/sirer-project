{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyecto-Silva-SIRER\\\\sirer-project\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Verificar autenticaci贸n al cargar\n  useEffect(() => {\n    const checkAuth = () => {\n      try {\n        const storedUser = authService.getCurrentUser();\n        const hasToken = authService.isAuthenticated();\n        if (storedUser && hasToken) {\n          setUser(storedUser);\n          setIsAuthenticated(true);\n        }\n      } catch (err) {\n        console.error('Error checking auth:', err);\n        // Limpiar datos corruptos\n        authService.logout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = useCallback(async (email, password) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await authService.login(email, password);\n      const {\n        usuario\n      } = response;\n      setUser(usuario);\n      setIsAuthenticated(true);\n      return {\n        success: true,\n        user: usuario\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Error al iniciar sesi贸n';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const logout = useCallback(() => {\n    authService.logout();\n    setUser(null);\n    setIsAuthenticated(false);\n    setError(null);\n  }, []);\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n  const hasRole = useCallback(role => {\n    return user && user.rol === role;\n  }, [user]);\n  const hasAnyRole = useCallback(roles => {\n    return user && roles.includes(user.rol);\n  }, [user]);\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    error,\n    login,\n    logout,\n    hasRole,\n    hasAnyRole,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"aArXq9YuNnk9bJj7aKUyyJXmNWo=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de un AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","error","setError","checkAuth","storedUser","getCurrentUser","hasToken","err","console","logout","login","email","password","response","usuario","success","_err$response","_err$response$data","errorMessage","data","clearError","hasRole","role","rol","hasAnyRole","roles","includes","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Proyecto-Silva-SIRER/sirer-project/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport { authService } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Verificar autenticaci贸n al cargar\r\n    useEffect(() => {\r\n        const checkAuth = () => {\r\n            try {\r\n                const storedUser = authService.getCurrentUser();\r\n                const hasToken = authService.isAuthenticated();\r\n\r\n                if (storedUser && hasToken) {\r\n                    setUser(storedUser);\r\n                    setIsAuthenticated(true);\r\n                }\r\n            } catch (err) {\r\n                console.error('Error checking auth:', err);\r\n                // Limpiar datos corruptos\r\n                authService.logout();\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        checkAuth();\r\n    }, []);\r\n\r\n    const login = useCallback(async (email, password) => {\r\n        try {\r\n            setIsLoading(true);\r\n            setError(null);\r\n\r\n            const response = await authService.login(email, password);\r\n            const { usuario } = response;\r\n\r\n            setUser(usuario);\r\n            setIsAuthenticated(true);\r\n            \r\n            return { success: true, user: usuario };\r\n        } catch (err) {\r\n            const errorMessage = err.response?.data?.error || 'Error al iniciar sesi贸n';\r\n            setError(errorMessage);\r\n            return { success: false, error: errorMessage };\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        authService.logout();\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n        setError(null);\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n    }, []);\r\n\r\n    const hasRole = useCallback((role) => {\r\n        return user && user.rol === role;\r\n    }, [user]);\r\n\r\n    const hasAnyRole = useCallback((roles) => {\r\n        return user && roles.includes(user.rol);\r\n    }, [user]);\r\n\r\n    const value = {\r\n        user,\r\n        isAuthenticated,\r\n        isLoading,\r\n        error,\r\n        login,\r\n        logout,\r\n        hasRole,\r\n        hasAnyRole,\r\n        clearError\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth debe ser usado dentro de un AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}